% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ConstrainedModel.r, R/ConstrainedModelPointer.r
\docType{methods}
\name{statismoConstrainModel}
\alias{statismoConstrainModel}
\alias{statismoConstrainModel,pPCA,matrix,matrix-method}
\alias{statismoConstrainModel,pPCA,matrix,numeric-method}
\alias{statismoConstrainModel,pPCA,numeric,numeric-method}
\alias{statismoConstrainModel,pPCA_pointer,matrix,matrix-method}
\alias{statismoConstrainModel,pPCA_pointer,matrix,numeric-method}
\alias{statismoConstrainModel,pPCA_pointer,numeric,numeric-method}
\title{constrain a model of class pPCA}
\usage{
statismoConstrainModel(
  model,
  sample,
  pt,
  ptValueNoise,
  computeScores = TRUE,
  pointer = FALSE
)

\S4method{statismoConstrainModel}{pPCA,matrix,matrix}(
  model,
  sample,
  pt,
  ptValueNoise,
  computeScores = TRUE,
  pointer = FALSE
)

\S4method{statismoConstrainModel}{pPCA,matrix,numeric}(
  model,
  sample,
  pt,
  ptValueNoise,
  computeScores = TRUE,
  pointer = FALSE
)

\S4method{statismoConstrainModel}{pPCA,numeric,numeric}(
  model,
  sample,
  pt,
  ptValueNoise,
  computeScores = TRUE,
  pointer = FALSE
)

\S4method{statismoConstrainModel}{pPCA_pointer,matrix,matrix}(
  model,
  sample,
  pt,
  ptValueNoise,
  computeScores = TRUE,
  pointer = TRUE
)

\S4method{statismoConstrainModel}{pPCA_pointer,matrix,numeric}(
  model,
  sample,
  pt,
  ptValueNoise,
  computeScores = TRUE,
  pointer = TRUE
)

\S4method{statismoConstrainModel}{pPCA_pointer,numeric,numeric}(
  model,
  sample,
  pt,
  ptValueNoise,
  computeScores = TRUE,
  pointer = TRUE
)
}
\arguments{
\item{model}{object of class pPCA}

\item{sample}{k x 3 matrix containing coordinates to constrain model to}

\item{pt}{either a matrix with each row containing points on the model's domain corresponding to the row in \code{sample} or an integer vector specifying the coordinates of the sample's mean corresponding to \code{sample}}

\item{ptValueNoise}{can be a single value, if the same spherical noise is to be used for all points, or a vector specifying spherical noise per point or a k*3 x 3 matrix with the per-point covariance matrices concatenated by row. See note below.}

\item{computeScores}{if TRUE, the scores (if present) are projected into the updated model space.}

\item{pointer}{if TRUE an object of class pPCA_pointer is returned.}
}
\value{
a constrained model
}
\description{
constrain a model of class pPCA
}
\note{
to specify per-point covariance matrices, one first has to setup the matrices at each point and then combine them via rbind.
}
\examples{
require(Rvcg)
data(humface)
hummodel <- statismoModelFromRepresenter(humface)
GPmodConstUnif <- statismoConstrainModel(hummodel,humface.lm,humface.lm,ptValueNoise = 1)
\dontrun{
## sample from model
for(i in 1:10) rgl::wire3d(DrawSample(GPmodConstUnif),col="red")
}
noise <- (0:6)*5
GPmodConst <- statismoConstrainModel(hummodel,humface.lm,humface.lm,ptValueNoise = noise)
\dontrun{
## sample from model
for(i in 1:10) rgl::wire3d(DrawSample(GPmodConst),col="white")
}
## and here an example where we assume spherical noise for each coordinate
## except the first one
## first constrain the model using the assumed covariance of the first coordinate
noise1 <- diag(3);noise1[1,1] <- 6
GPmodCov <- statismoConstrainModel(hummodel,humface.lm[1,,drop=FALSE],
                                   humface.lm[1,,drop=FALSE],ptValueNoise = 1)
## now we constrain the rest
GPmodCov <- statismoConstrainModel(GPmodCov,humface.lm[-1,],humface.lm[-1,],ptValueNoise = 0.01)
}
